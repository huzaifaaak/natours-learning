@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* Section 2 - Lecture 10: Animation for button move */
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  80% {
    transform: translateY(-1rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

/* Root font size */
html {
  font-size: 62.5%; }

body {
  color: #777;
  font-family: "Lato", Arial, sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  padding: 3rem;
  /* Force inherit box-sizing to all elements */
  box-sizing: border-box; }

.heading-primary {
  color: #eee;
  text-transform: uppercase;
  /* To remove the upwards shaky movement of the heading primary main and sub */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* Shorthand used here */
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, #55c57a, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s;
  display: inline-block; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewY(15deg) scale(1.1);
    box-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiay {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.row {
  display: flex;
  background-color: #f7f7f7 !important;
  gap: 1rem; }

.halfRow {
  display: flex;
  min-height: 3rem;
  width: 50%; }

.space {
  display: flex;
  width: 2rem;
  height: 100%; }

.section-feature {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  transform: skewY(-7deg);
  margin-top: -10rem; }
  .section-feature > * {
    transform: skewY(7deg); }

.section-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6rem; }

.feature-box {
  background-color: rgba(238, 238, 238, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  display: inline-block;
  transition: all 0.3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: 0.5rem;
    background-image: linear-gradient(to right, #55c57a, #28b485);
    -webkit-background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 50rem 0;
  margin-top: -10rem; }

.row {
  max-width: 114rem;
  background-color: rgba(119, 119, 119, 0.167);
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row:after {
    content: "";
    clear: both;
    display: table; }
  .row [class^="col-"] {
    background-color: orangered;
    float: left;
    color: #eee;
    text-align: center;
    font-size: 2rem;
    height: calc(8rem * .75); }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem)/3); }
  .row .col-2-of-3 {
    width: calc((2 * ((100% - 2 * 6rem)/3)) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem)/4); }
  .row .col-2-of-4 {
    width: calc( 2* ((100% - 3 * 6rem)/4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem)/4) + 2 * 6rem); }

/* Pseudo classes. Using the state of the selector */
/* E.g. visited, link, active, hover */
.btn {
  /* Section 2 Lecture 10 Lesson - Pseudo elements */
  /* In this lesson, a larger version of the button will appear behind the original */
  /* button using hover. &::after will be used */
  /* Add the transform rule to scale when &:hover::after is applied */
  /* Apply button animation to a new class to make effect exclusive to animated buttons only */
  /* Note animation formula: animation name, animation duration, animation timing function and animation-delay; */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* Rule for all transtions to be on the main link */
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    /* ADD Shadow when hovered */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:active {
    transform: translateY(-0.1rem);
    /* ADD Shadow when clicked */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #eee;
    color: #777; }
    .btn--white::after {
      background-color: #eee; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* Apply 0% animation effect to the button using animation fill mode */
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #7ed56f;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #7ed56f;
  padding: 3px;
  transition: all 0.2s; }

.btn-text:hover {
  background-color: #7ed56f;
  color: #eee;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(0px); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  width: 100%;
  position: relative; }
  .card__container {
    display: flex;
    flex-grow: 1; }
  .card__side {
    background-color: orangered;
    height: 50rem;
    color: #fff;
    size: 2rem;
    transition: all 0.8s ease;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    backface-visibility: hidden;
    border-radius: 3px;
    box-shadow: 0 1.5rem 4 rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      background-color: #eee;
      width: 100%;
      height: 50rem; }
    .card__side--back {
      background-color: orangered;
      transform: rotateY(180deg);
      width: 100%;
      height: 50rem; }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0deg); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* Top and left relate to the parent element, hence the position of the parent 
    being relative */
    top: 40%;
    left: 50%;
    /* Transform relates to the size of the element being positioned */
    transform: translate(-50%, -50%);
    /* Since there is an element displayed as an inline-block inside this parent div, it can be treated as text  */
    /* hence the rule below can be applied */
    text-align: center; }

.composition {
  display: flex;
  flex: 1;
  position: relative;
  margin-left: 6rem; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 11;
      outline: 10px solid #55c57a; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(238, 238, 238, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  flex-direction: column;
  width: 25rem; }
